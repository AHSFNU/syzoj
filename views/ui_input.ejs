
<script id="uiSearchDropdownTemplate" type="text/x-template">
  <select ref="select" class="ui search dropdown" multiple>
    <option v-for="item of items" :key="item" :value="item" selected>
      {{ item }}
    </option>
  </select>
</script>

<!--
<div class="ui search selection dropdown">
  <i class="dropdown icon"></i>
  <div class="default text">
    <slot></slot>
  </div>
</div>
-->

<script id="uiCheckboxTemplate" type="text/x-template">
  <div class="ui checkbox">
    <input type="checkbox" :checked="checked">
    <label>
      <slot></slot>
    </label>
  </div>
</script>

<script>
  Vue.component('ui-search-dropdown', {
    template: '#uiSearchDropdownTemplate',
    props: {
      options: {
        type: Object
      },
      items: {
        type: Array,
        default: () => []
      }
    },
    model: {
      prop: 'items',
      event: 'change'
    },
    computed: {
      $sel() {
        return $(this.$refs.select);
      }
    },
    mounted() {
      const handler = () => {
        setTimeout(() => {
          this.$emit('change', this.get())
        }, 0);
      };
      $(() => {
        this.$sel.dropdown({
          ...this.options,
          onAdd: handler,
          onRemove: handler
        });
      });
    },
    methods: {
      get() {
        return [...new Set(this.$sel.dropdown('get value'))];
      }
    }
  });

  Vue.component('ui-checkbox', {
    template: '#uiCheckboxTemplate',
    props: {
      checked: {
        type: Boolean,
        default: false
      }
    },
    model: {
      prop: 'checked',
      event: 'change'
    },
    computed: {
      $input() {
        return $(this.$el);
      }
    },
    mounted() {
      $(() => {
        this.$input.checkbox({
          onChange: () => {
            this.$emit('change', this.isChecked());
          }
        });
      });
    },
    methods: {
      isChecked() {
        return this.$input.checkbox('is checked');
      }
    }
  });
</script>
