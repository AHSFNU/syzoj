<% this.title = '日历' %>
<% include header %>

<script src="<%- lib('vue/2.5.21/vue.min.js') %>"></script>

<div class="padding" id="appCalendar">
  <table class="ui very basic center aligned table" style="table-layout: fixed">
    <thead>
      <tr>
        <th style="width: 60px">#</th>
        <th style="width: 150px">OJ</th>
        <th>比赛</th>
        <th style="width: 150px">开始时间</th>
        <th style="width: 150px">结束时间</th>
        <th style="width: 150px">时长</th>
      </tr>
    </thead>
    <tbody v-for="(contest, cnt) of contests">
      <tr>
        <td>{{ cnt + 1 }}</td>
        <td>
          <img :src="contest.oj.icon.url" :alt="contest.oj.name" :class="'oj-icon ' + contest.oj.icon.variety">
          {{ contest.oj.name }}
        </td>
        <td><a :href="contest.url" target="_blank">{{ contest.name }}</a></td>
        <td>{{ contest.startTime }}</td>
        <td>{{ contest.endTime }}</td>
        <td>{{ contest.lastTime }}</td>
      </tr>
    </tbody>
  </table>
</div>

<script src="https://cdn.jsdelivr.net/npm/moment@2.27.0/moment.min.js"></script>

<script>
  function parseMinutes(minutes) {
    const days = parseInt(minutes / 60 / 24), hours = parseInt(minutes / 60) % 24;
    minutes = minutes % 60;
    return [
      days && `${days} 天`,
      hours && `${hours} 小时`,
      minutes && `${minutes} 分钟`
    ].filter(str => !!str).join(' ');
  }

  function refactor(data) {
    let contests = [];
    for (let oj of data.oj) {
      for (let contest of oj.contests) {
        contest.oj = oj;
        contests.push(contest);
      }
    }
    contests.sort((a, b) => new Date(a.startTime) - new Date(b.startTime));
    for (let contest of contests) {
      contest.lastTime = parseMinutes(moment(contest.endTime).diff(contest.startTime, 'm'));
      contest.startTime = moment(contest.startTime).format('MM 月 DD 日 HH:mm');
      contest.endTime = moment(contest.endTime).format('MM 月 DD 日 HH:mm');
    }
    return contests;
  }

  var appCalendar = new Vue({
    el: '#appCalendar',
    data: {
      contests: []
    },
    async mounted() {
      try {
        this.contests = await fetch(<%- serializejs(syzoj.config.calendar.api_url) %>)
          .then(res => res.json())
          .then(res => refactor(res));
      } catch (err) {
        console.log(err);
      }
    }
  });
</script>

<style type="text/css">
  img.oj-icon {
    width: 1.2em;
    height: 1.2em;
    vertical-align: text-bottom;
    margin-right: .25em;
  }

  img.oj-icon.circular {
    border-radius: 50%;
  }
</style>

<% include footer %>
